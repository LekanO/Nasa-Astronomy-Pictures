{"ast":null,"code":"import { backdateByDays } from \"./backdateByDays\";\nexport function fetchData() {\n  var _params$get;\n  let image;\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  let url = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n  const params = new URLSearchParams(window.location.search);\n  const date = (_params$get = params.get(\"date\")) === null || _params$get === void 0 ? void 0 : _params$get.toString();\n  url.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n  if (!date) {\n    url.searchParams.append(\"start_date\", start_date);\n    url.searchParams.append(\"end_date\", end_date);\n  } else {\n    url.searchParams.delete(\"start_date\");\n    url.searchParams.delete(\"end_date\");\n    url.searchParams.append(\"date\", String(date));\n  }\n  fetch(url.href).then(response => response).then(e => e.json()).then(e => {\n    console.log(\"eeeeee\", e);\n    return image = e;\n  });\n  return image;\n}","map":{"version":3,"names":["backdateByDays","fetchData","_params$get","image","start_date","end_date","url","URL","process","env","REACT_APP_NASA_BASE_URL","params","URLSearchParams","window","location","search","date","get","toString","searchParams","append","String","REACT_APP_NASA_API","delete","fetch","href","then","response","e","json","console","log"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/libs/fetchData.ts"],"sourcesContent":["import { backdateByDays } from \"./backdateByDays\";\n\nexport function fetchData() {\n  let image;\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n\n  let url = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n  const params = new URLSearchParams(window.location.search);\n  const date = params.get(\"date\")?.toString();\n  url.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n  if (!date) {\n    url.searchParams.append(\"start_date\", start_date);\n    url.searchParams.append(\"end_date\", end_date);\n  } else {\n    url.searchParams.delete(\"start_date\");\n    url.searchParams.delete(\"end_date\");\n    url.searchParams.append(\"date\", String(date));\n  }\n\n  fetch(url.href)\n    .then((response) => response)\n    .then((e) => e.json())\n    .then((e) => {\n      console.log(\"eeeeee\", e);\n      return (image = e);\n    });\n\n  return image;\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,SAASA,CAAA,EAAG;EAAA,IAAAC,WAAA;EAC1B,IAAIC,KAAK;EACT,MAAMC,UAAU,GAAGJ,cAAc,CAAC,CAAC,CAAC;EACpC,MAAMK,QAAQ,GAAGL,cAAc,CAAC,CAAC,CAAC;EAElC,IAAIM,GAAG,GAAG,IAAIC,GAAG,CAAC,iBAAiB,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAAC;EACzE,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC1D,MAAMC,IAAI,IAAAd,WAAA,GAAGS,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC,cAAAf,WAAA,uBAAlBA,WAAA,CAAoBgB,QAAQ,CAAC,CAAC;EAC3CZ,GAAG,CAACa,YAAY,CAACC,MAAM,CAAC,SAAS,EAAEC,MAAM,CAACb,OAAO,CAACC,GAAG,CAACa,kBAAkB,CAAC,CAAC;EAC1E,IAAI,CAACN,IAAI,EAAE;IACTV,GAAG,CAACa,YAAY,CAACC,MAAM,CAAC,YAAY,EAAEhB,UAAU,CAAC;IACjDE,GAAG,CAACa,YAAY,CAACC,MAAM,CAAC,UAAU,EAAEf,QAAQ,CAAC;EAC/C,CAAC,MAAM;IACLC,GAAG,CAACa,YAAY,CAACI,MAAM,CAAC,YAAY,CAAC;IACrCjB,GAAG,CAACa,YAAY,CAACI,MAAM,CAAC,UAAU,CAAC;IACnCjB,GAAG,CAACa,YAAY,CAACC,MAAM,CAAC,MAAM,EAAEC,MAAM,CAACL,IAAI,CAAC,CAAC;EAC/C;EAEAQ,KAAK,CAAClB,GAAG,CAACmB,IAAI,CAAC,CACZC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAAC,CAC5BD,IAAI,CAAEE,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBH,IAAI,CAAEE,CAAC,IAAK;IACXE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,CAAC,CAAC;IACxB,OAAQzB,KAAK,GAAGyB,CAAC;EACnB,CAAC,CAAC;EAEJ,OAAOzB,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}