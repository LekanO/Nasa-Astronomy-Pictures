{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/Components/Datepick.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport { formatDate } from \"../libs/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Datepick = () => {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [startDate, setStartDate] = useState(new Date());\n  const dateFormat = formatDate(startDate);\n  console.log(\"searchParams\", searchParams);\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    selected: new Date(startDate),\n    onChange: date => {\n      if (date !== null) {\n        setStartDate(date);\n      }\n      setSearchParams({\n        date: String(dateFormat)\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Datepick, \"sofWTuygyWpZG5UhBNw4M3ucS4Y=\", false, function () {\n  return [useSearchParams];\n});\n_c = Datepick;\nexport default Datepick;\nvar _c;\n$RefreshReg$(_c, \"Datepick\");","map":{"version":3,"names":["useState","useSearchParams","DatePicker","formatDate","jsxDEV","_jsxDEV","Datepick","_s","searchParams","setSearchParams","startDate","setStartDate","Date","dateFormat","console","log","selected","onChange","date","String","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/Components/Datepick.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport { formatDate } from \"../libs/formatDate\";\n\nconst Datepick = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [startDate, setStartDate] = useState(new Date());\n  const dateFormat = formatDate(startDate);\n\n  console.log(\"searchParams\", searchParams);\n  return (\n    <DatePicker\n      selected={new Date(startDate)}\n      onChange={(date) => {\n        if (date !== null) {\n          setStartDate(date);\n        }\n        setSearchParams({ date: String(dateFormat) });\n      }}\n    />\n  );\n};\n\nexport default Datepick;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,gDAAgD;AACvD,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,eAAe,CAAC,CAAC;EACzD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMC,UAAU,GAAGV,UAAU,CAACO,SAAS,CAAC;EAExCI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,YAAY,CAAC;EACzC,oBACEH,OAAA,CAACH,UAAU;IACTc,QAAQ,EAAE,IAAIJ,IAAI,CAACF,SAAS,CAAE;IAC9BO,QAAQ,EAAGC,IAAI,IAAK;MAClB,IAAIA,IAAI,KAAK,IAAI,EAAE;QACjBP,YAAY,CAACO,IAAI,CAAC;MACpB;MACAT,eAAe,CAAC;QAAES,IAAI,EAAEC,MAAM,CAACN,UAAU;MAAE,CAAC,CAAC;IAC/C;EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAChB,EAAA,CAjBID,QAAQ;EAAA,QAC4BL,eAAe;AAAA;AAAAuB,EAAA,GADnDlB,QAAQ;AAmBd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}