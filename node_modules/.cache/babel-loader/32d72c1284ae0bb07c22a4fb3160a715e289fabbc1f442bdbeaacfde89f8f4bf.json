{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router\";\nimport Datepick from \"./Components/Datepick\";\nimport { backdateByDays } from \"./libs/backdateByDays\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _params$get, _images$;\n  const [images, setImages] = useState([]);\n  const [image, setImage] = useState();\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  let url = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n  const params = new URLSearchParams(window.location.search);\n  const date = (_params$get = params.get(\"date\")) === null || _params$get === void 0 ? void 0 : _params$get.toString();\n  useEffect(() => {\n    url.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n    if (!date) {\n      url.searchParams.append(\"start_date\", start_date);\n      url.searchParams.append(\"end_date\", end_date);\n    } else {\n      url.searchParams.delete(\"start_date\");\n      url.searchParams.delete(\"end_date\");\n      url.searchParams.append(\"date\", String(date));\n    }\n    fetch(url.href).then(response => response).then(e => e.json()).then(e => {\n      if (!date) {\n        return setImages(e);\n      }\n      return setImage(e);\n    });\n  }, [window.location.search]);\n  console.log(\"dating date\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-datepicker\",\n        children: /*#__PURE__*/_jsxDEV(Datepick, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-display\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"Main-image\",\n          src: image ? image.hdurl : (_images$ = images[5]) === null || _images$ === void 0 ? void 0 : _images$.hdurl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LophX3sHG/AI5DToIvzyqL2jaGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Outlet","Datepick","backdateByDays","jsxDEV","_jsxDEV","App","_s","_params$get","_images$","images","setImages","image","setImage","start_date","end_date","url","URL","process","env","REACT_APP_NASA_BASE_URL","params","URLSearchParams","window","location","search","date","get","toString","searchParams","append","String","REACT_APP_NASA_API","delete","fetch","href","then","response","e","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","hdurl","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router\";\nimport Datepick from \"./Components/Datepick\";\nimport { backdateByDays } from \"./libs/backdateByDays\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface Props {\n  copyright: string;\n  date: string;\n  explanation: string;\n  hdurl: string;\n  media_type: string;\n  service_version: string;\n  title: string;\n  url: string;\n}\n\nfunction App() {\n  const [images, setImages] = useState<Props[]>([]);\n  const [image, setImage] = useState<Props>();\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  let url = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n  const params = new URLSearchParams(window.location.search);\n  const date = params.get(\"date\")?.toString();\n  useEffect(() => {\n    url.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n    if (!date) {\n      url.searchParams.append(\"start_date\", start_date);\n      url.searchParams.append(\"end_date\", end_date);\n    } else {\n      url.searchParams.delete(\"start_date\");\n      url.searchParams.delete(\"end_date\");\n      url.searchParams.append(\"date\", String(date));\n    }\n\n    fetch(url.href)\n      .then((response) => response)\n      .then((e) => e.json())\n      .then((e) => {\n        if (!date) {\n          return setImages(e);\n        }\n        return setImage(e);\n      });\n  }, [window.location.search]);\n\n  console.log(\"dating date\");\n  return (\n    <div className=\"App\">\n      <section className=\"Main\">\n        <div className=\"Main-datepicker\">\n          <Datepick />\n        </div>\n        <div className=\"Main-display\">\n          <img\n            className=\"Main-image\"\n            src={image ? image.hdurl : images[5]?.hdurl}\n          />\n        </div>\n      </section>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}