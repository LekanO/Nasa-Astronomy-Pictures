{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router\";\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { backdateByDays } from \"./libs/backdateByDays\";\nimport { formatDate } from \"./libs/formatDate\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _params$get, _images$;\n  const [images, setImages] = useState([]);\n  const [image, setImage] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [startDate, setStartDate] = useState(new Date());\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  let apiUrl = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n  const params = new URLSearchParams(window.location.search);\n  const dateParam = (_params$get = params.get(\"date\")) === null || _params$get === void 0 ? void 0 : _params$get.toString();\n  const fetchImages = async () => {\n    apiUrl.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n    if (!dateParam) {\n      apiUrl.searchParams.append(\"start_date\", start_date);\n      apiUrl.searchParams.append(\"end_date\", end_date);\n    }\n    return await fetch(apiUrl.href).then(response => response).then(e => e.json()).then(e => {\n      setImages(e);\n    });\n  };\n  const fetchImage = async date => {\n    const dateQuery = formatDate(String(date));\n    apiUrl.searchParams.append(\"api_key\", String(process.env.REACT_APP_NASA_API));\n    apiUrl.searchParams.delete(\"start_date\");\n    apiUrl.searchParams.delete(\"end_date\");\n    apiUrl.searchParams.append(\"date\", dateQuery);\n    return await fetch(apiUrl.href).then(response => response).then(e => e.json()).then(e => {\n      setImage(e);\n    });\n  };\n  const {\n    error,\n    isLoading,\n    data\n  } = useQuery({\n    queryKey: [\"imageFetch\"],\n    queryFn: fetchImage\n  });\n  console.log(\"dusosdd\", error, \"isloading\", isLoading, \"dasss\", data);\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-datepicker\",\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: new Date(startDate),\n          onChange: date => {\n            if (!date) return;\n            const dateQuery = formatDate(String(date));\n            fetchImage(date);\n            setStartDate(date);\n            if (!date) return;\n            // setStartDate(date);\n            setSearchParams({\n              date: dateQuery\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-display\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"Main-image\",\n          src: image ? image.hdurl : (_images$ = images[5]) === null || _images$ === void 0 ? void 0 : _images$.hdurl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KE/kSFAmcv2Qvs57fLBb01gtlHc=\", false, function () {\n  return [useSearchParams, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Outlet","useSearchParams","DatePicker","backdateByDays","formatDate","useQuery","jsxDEV","_jsxDEV","App","_s","_params$get","_images$","images","setImages","image","setImage","searchParams","setSearchParams","startDate","setStartDate","Date","start_date","end_date","apiUrl","URL","process","env","REACT_APP_NASA_BASE_URL","params","URLSearchParams","window","location","search","dateParam","get","toString","fetchImages","append","String","REACT_APP_NASA_API","fetch","href","then","response","e","json","fetchImage","date","dateQuery","delete","error","isLoading","data","queryKey","queryFn","console","log","className","children","selected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","hdurl","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router\";\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { backdateByDays } from \"./libs/backdateByDays\";\nimport { formatDate } from \"./libs/formatDate\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface Props {\n  copyright: string;\n  date: string;\n  explanation: string;\n  hdurl: string;\n  media_type: string;\n  service_version: string;\n  title: string;\n  url: string;\n}\n\nfunction App() {\n  const [images, setImages] = useState<Props[]>([]);\n  const [image, setImage] = useState<Props>();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [startDate, setStartDate] = useState(new Date());\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  let apiUrl = new URL(\"/planetary/apod\", process.env.REACT_APP_NASA_BASE_URL);\n\n  const params = new URLSearchParams(window.location.search);\n  const dateParam = params.get(\"date\")?.toString();\n\n  const fetchImages = async () => {\n    apiUrl.searchParams.append(\n      \"api_key\",\n      String(process.env.REACT_APP_NASA_API)\n    );\n    if (!dateParam) {\n      apiUrl.searchParams.append(\"start_date\", start_date);\n      apiUrl.searchParams.append(\"end_date\", end_date);\n    }\n    return await fetch(apiUrl.href)\n      .then((response) => response)\n      .then((e) => e.json())\n      .then((e) => {\n        setImages(e);\n      });\n  };\n\n  const fetchImage = async (date: Date) => {\n    const dateQuery = formatDate(String(date));\n\n    apiUrl.searchParams.append(\n      \"api_key\",\n      String(process.env.REACT_APP_NASA_API)\n    );\n    apiUrl.searchParams.delete(\"start_date\");\n    apiUrl.searchParams.delete(\"end_date\");\n    apiUrl.searchParams.append(\"date\", dateQuery);\n\n    return await fetch(apiUrl.href)\n      .then((response) => response)\n      .then((e) => e.json())\n      .then((e) => {\n        setImage(e);\n      });\n  };\n\n  const { error, isLoading, data } = useQuery<any>({\n    queryKey: [\"imageFetch\"],\n    queryFn: fetchImage as any,\n  });\n\n  console.log(\"dusosdd\", error, \"isloading\", isLoading, \"dasss\", data);\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <section className=\"Main\">\n        <div className=\"Main-datepicker\">\n          <DatePicker\n            selected={new Date(startDate)}\n            onChange={(date) => {\n              if (!date) return;\n              const dateQuery = formatDate(String(date));\n              fetchImage(date);\n              setStartDate(date);\n              if (!date) return;\n              // setStartDate(date);\n              setSearchParams({ date: dateQuery });\n            }}\n          />\n          <br />\n        </div>\n        <div className=\"Main-display\">\n          <img\n            className=\"Main-image\"\n            src={image ? image.hdurl : images[5]?.hdurl}\n          />\n        </div>\n      </section>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}