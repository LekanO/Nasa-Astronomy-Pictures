{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Outlet } from \"react-router\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Datepick from \"./Components/Datepick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backdateByDays = number => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() - number);\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\nfunction App() {\n  _s();\n  var _images$;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [start, setStart] = useState(searchParams.get(\"n\"));\n  const [images, setImages] = useState([]);\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=DJnbcPU0nmH4c9DUejNgqxVpFh8wB61Jo8RiHeLc&start_date=${start_date}&end_date=${end_date}`).then(response => response).then(e => e.json()).then(e => setImages(e));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-datepicker\",\n        children: /*#__PURE__*/_jsxDEV(Datepick, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-display\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"Main-image\",\n          src: (_images$ = images[5]) === null || _images$ === void 0 ? void 0 : _images$.hdurl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D5cWIS2ThVcKkxnH1Frgpemxvbk=\", false, function () {\n  return [useSearchParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useSearchParams","Outlet","Datepick","jsxDEV","_jsxDEV","backdateByDays","number","currentDate","Date","setDate","getDate","year","getFullYear","month","String","getMonth","padStart","day","App","_s","_images$","searchParams","setSearchParams","start","setStart","get","images","setImages","start_date","end_date","fetch","then","response","e","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","hdurl","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Outlet } from \"react-router\";\nimport \"./App.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Datepick from \"./Components/Datepick\";\n\ninterface Props {\n  copyright: string;\n  date: string;\n  explanation: string;\n  hdurl: string;\n  media_type: string;\n  service_version: string;\n  title: string;\n  url: string;\n}\n\nconst backdateByDays = (number: number) => {\n  const currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() - number);\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(currentDate.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\n\nfunction App() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [start, setStart] = useState(searchParams.get(\"n\"));\n  const [images, setImages] = useState<Props[]>([]);\n  const start_date = backdateByDays(6);\n  const end_date = backdateByDays(0);\n\n  useEffect(() => {\n    fetch(\n      `https://api.nasa.gov/planetary/apod?api_key=DJnbcPU0nmH4c9DUejNgqxVpFh8wB61Jo8RiHeLc&start_date=${start_date}&end_date=${end_date}`\n    )\n      .then((response) => response)\n      .then((e) => e.json())\n      .then((e) => setImages(e));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <section className=\"Main\">\n        <div className=\"Main-datepicker\">\n          <Datepick />\n        </div>\n        <div className=\"Main-display\">\n          <img className=\"Main-image\" src={images[5]?.hdurl} />\n        </div>\n      </section>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}