{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/Components/Datepick.tsx\",\n  _s = $RefreshSig$();\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport { formatDate } from \"../libs/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Datepick = () => {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  //   const [startDate, setStartDate] = useState(new Date());\n  let startDate = new Date();\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    selected: new Date(startDate),\n    onChange: date => {\n      if (!date) return;\n      const dateQuery = formatDate(date);\n      console.log(\"doss\", dateQuery);\n      setSearchParams({\n        date: String(dateQuery)\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Datepick, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n_c = Datepick;\nexport default Datepick;\nvar _c;\n$RefreshReg$(_c, \"Datepick\");","map":{"version":3,"names":["useSearchParams","DatePicker","formatDate","jsxDEV","_jsxDEV","Datepick","_s","searchParams","setSearchParams","startDate","Date","selected","onChange","date","dateQuery","console","log","String","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/astronomy-picture-of-the-day/src/Components/Datepick.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport { formatDate } from \"../libs/formatDate\";\n\nconst Datepick = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  //   const [startDate, setStartDate] = useState(new Date());\n  let startDate = new Date();\n\n  return (\n    <DatePicker\n      selected={new Date(startDate)}\n      onChange={(date) => {\n        if (!date) return;\n        const dateQuery = formatDate(date);\n        console.log(\"doss\", dateQuery);\n        setSearchParams({ date: String(dateQuery) });\n      }}\n    />\n  );\n};\n\nexport default Datepick;\n"],"mappings":";;AACA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,gDAAgD;AACvD,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,eAAe,CAAC,CAAC;EACzD;EACA,IAAIS,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;EAE1B,oBACEN,OAAA,CAACH,UAAU;IACTU,QAAQ,EAAE,IAAID,IAAI,CAACD,SAAS,CAAE;IAC9BG,QAAQ,EAAGC,IAAI,IAAK;MAClB,IAAI,CAACA,IAAI,EAAE;MACX,MAAMC,SAAS,GAAGZ,UAAU,CAACW,IAAI,CAAC;MAClCE,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,SAAS,CAAC;MAC9BN,eAAe,CAAC;QAAEK,IAAI,EAAEI,MAAM,CAACH,SAAS;MAAE,CAAC,CAAC;IAC9C;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACf,EAAA,CAhBID,QAAQ;EAAA,QAC4BL,eAAe;AAAA;AAAAsB,EAAA,GADnDjB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}